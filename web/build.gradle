apply plugin: 'java'
apply plugin: "idea"
apply plugin: "org.springframework.boot"
apply plugin: "application"
apply plugin: 'org.hidetake.ssh'

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-data-redis")
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.boot:spring-boot-starter-actuator")

    compile "mysql:mysql-connector-java:5.1.29"
    compile project(':common')
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile(
            "org.springframework.boot:spring-boot-starter-test",
            "junit:junit"
    )

    runtime "org.codehaus.groovy:groovy:2.4.12"

}

def $BASE_NAME = 'gcs.web'
def $VERSION = 1.0
def $MANIFEST_VERSION = 1.1
def gradle_build_time() {
    return new Date().format("yyyy-MM-dd HH:mm:ss", TimeZone.getTimeZone("UTC"))
}
compileJava.options.encoding = 'UTF-8'
mainClassName = "com.learning."+$BASE_NAME+".Application"

startScripts {
    defaultJvmOpts = ['-server', '-Xmx2048m', '-Xms1024m', '-Xmn4096m']
    doLast {
        def windowsScriptFile = file getWindowsScript()
        def unixScriptFile = file getUnixScript()
        windowsScriptFile.text = windowsScriptFile.text.replace('%APP_HOME%\\lib\\' + $BASE_NAME + '-' + $VERSION + '.jar', '%APP_HOME%\\conf;%APP_HOME%\\lib\\' + $BASE_NAME + '-' + $VERSION + '.jar')
        unixScriptFile.text = unixScriptFile.text.replace('$APP_HOME/lib/' + $BASE_NAME + '-' + $VERSION + '.jar', '$APP_HOME/conf:$APP_HOME/lib/' + $BASE_NAME + '-' + $VERSION + '.jar')
    }
}
applicationDistribution.from("src/main/resources/") {
    into "conf"
}

jar{
    baseName = $BASE_NAME
    version = $VERSION
    manifest {
        attributes(
                "provider":"GlodStone",
                "Implementation-Version": "${$MANIFEST_VERSION}_${gradle_build_time()}",
                "Main-Class": "com.learning.${$BASE_NAME}.Application",
                "Class-Path": configurations.compile.collect { it.getName() }.join(' ')
        )
    }
}
//distZip 打包需要放开
//processResources {
//    exclude "application.properties"
//    exclude "banner.txt"
//    exclude "logback.groovy"
//}

defaultTasks "copyResourceToStatic"

task copyResourceToStatic {
    copy {
        from("src/main/resources/templates") {
            exclude "*.html", "*.xml"
        }
        into "src/main/resources/static"
        exclude "**/*.bak"

    }
}
ssh.settings {
    knownHosts = allowAnyHosts
}

remotes {
    deployServer {
        host = 'aso.ailiuliangyo.com'
        user = 'root'
        password = ''
    }
}


task shutdownTomcat(dependsOn:distZip) << {
    ssh.run {
        session(remotes.deployServer) {
            println 'shut down tomcat...'
            executeScript   '''
                            #! /bin/bash   
                            ret=$(ps -ef | grep web-8080 | grep -v grep)
                            arr=(${ret// / })  
                            echo ${ret} 
                            echo ${arr[1]} 
                            kill -9 ${arr[1]} 
                            '''
        }
    }
}

task uploadJars(dependsOn:shutdownTomcat) << {
    ssh.run {
        session(remotes.deployServer) {
            println 'start copying Jars...'
            put from: buildDir.toString() + '/libs/gcs.web-1.0.jar', into: '/test/'
            put from: rootDir.toString() + '/common/build/libs/common-1.0.jar', into: '/test/'
        }
    }
}
task deploy(dependsOn:uploadJars) << {
    ssh.run {
        session(remotes.deployServer) {
            println 'start deploy Project...'
            //删除old Jars ,移动new Jars
            //启动App
            executeScript   '''
                            #! /bin/bash   
                            mv -f /usr/local/gcs/web-8080/lib/gcs.web-1.0.jar /backup/
                            mv -f /usr/local/gcs/web-8080/lib/common-1.0.jar  /backup/
                            mv /test/gcs.web-1.0.jar /test/common-1.0.jar  /usr/local/gcs/web-8080/lib/
                            cd /usr/local/gcs/web-8080
                            nohup bin/web &
                            '''
        }
    }
}
